SCRIPTS="scripts" # path to the scripts directory

DEFFNM="example" # default name to be used for files

DATAPATH="example" # path to the directory containing the trajectory.
REFFILE1=$DATAPATH/$DEFFNM.pdb # reference PDB for trajectory. 
REFFILE2=$DATAPATH/"$DEFFNM"_heavy.pdb # reference for the reconstructed trajectory. this is generated by prepare_data.py.
TRAJFILE1=$DATAPATH/"$DEFFNM".xtc # actual trajectory.
SCALER=$DATAPATH/"$DEFFNM"_scaler.pkl # the MinMax scaler object. generated by prepare_data.py
MODEL=$DATAPATH/"$DEFFNM"_model.pt # the trained autoencoder model is saved into this file. generated by train_ae.py
COMPRESSED=$DATAPATH/"$DEFFNM"_compressed.pkl # the compressed trajectory in the form of latent space. generated by compress.py
TRAJFILE2=$DATAPATH/"$DEFFNM"_decompressed.xtc # reconstructed trajectory form the latent space. generated by decompress.py

# uncomment for compression. comment to switch off automated compression.
python $SCRIPTS/prepare_data.py --reffile $REFFILE1 --trajfile $TRAJFILE1 --prefix $DATAPATH/"$DEFFNM" # prepare data
python $SCRIPTS/train_ae.py --train_loader $DATAPATH/"$DEFFNM"_train.pkl -v $DATAPATH/"$DEFFNM"_val.pkl -p $DATAPATH/"$DEFFNM" -e 20 # train autoencoder
python $SCRIPTS/compress.py -m $MODEL -r $REFFILE1 -t $TRAJFILE1 -o $COMPRESSED # compress trajectory
rm -r lightning_logs

# uncomment the following for decompression. comment to switch off automated decompression
 python $SCRIPTS/decompress.py -m $MODEL -s $SCALER -r $REFFILE1 -o $TRAJFILE2 -c $COMPRESSED -p $DATAPATH/"$DEFFNM"_padding.txt # decompress trajectory
 python $SCRIPTS/rmsd_frames.py -r1 $REFFILE1 -t1 $TRAJFILE1 -r2 $REFFILE2 -t2 $TRAJFILE2 -o $DATAPATH/"$DEFFNM"_rmsd.txt # calculate RMSD to verify reconstruction
 rm rmsfit*
